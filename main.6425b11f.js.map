{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelectorAll","tBody","querySelector","forEach","item","addEventListener","event","catchTheButtonRemove","target","closest","catchTheButtonAppend","catchTheButtonRemoveColumn","catchTheButtonAppendColumn","updateButtonState","btn","rowCount","rows","length","columnCount","cells","classList","contains","disabled","deleteRow","lastElement","copiedRow","cloneNode","append","columnIndex","i","deleteCell","insertCell"],"mappings":";AAAA,aAEA,IAAMA,EAASC,SAASC,iBAAiB,UACnCC,EAAQF,SAASG,cAAc,SAErCJ,EAAOK,QAAQ,SAACC,GAEdA,EAAKC,iBAAiB,QAAS,SAAUC,GACjCC,IAAAA,EAAuBD,EAAME,OAAOC,QAAQ,eAC5CC,EAAuBJ,EAAME,OAAOC,QAAQ,eAC5CE,EAA6BL,EAAME,OAAOC,QAAQ,kBAClDG,EAA6BN,EAAME,OAAOC,QAAQ,kBAE/CI,SAAAA,IACPf,EAAOK,QAAQ,SAACW,GACRC,IAAAA,EAAWd,EAAMe,KAAKC,OACtBC,EAAcjB,EAAMe,KAAK,GAAKf,EAAMe,KAAK,GAAGG,MAAMF,OAAS,EAE7DH,EAAIM,UAAUC,SAAS,gBACzBP,EAAIQ,SAAWP,GAAY,GAGzBD,EAAIM,UAAUC,SAAS,gBACzBP,EAAIQ,SAAWP,GAAY,IAGzBD,EAAIM,UAAUC,SAAS,mBACzBP,EAAIQ,SAAWJ,GAAe,GAG5BJ,EAAIM,UAAUC,SAAS,mBACzBP,EAAIQ,SAAWJ,GAAe,MAYhCR,GAPAH,IACEN,EAAMe,KAAKC,OAAS,GACtBhB,EAAMsB,UAAUtB,EAAMe,KAAKC,OAAS,GAEtCJ,KAGEH,EAAsB,CAClBc,IAAAA,EAAcvB,EAAMe,KAAKf,EAAMe,KAAKC,OAAS,GAE/CO,GAAAA,EAAa,CACTC,IAAAA,EAAYD,EAAYE,WAAU,GAExCzB,EAAM0B,OAAOF,GAEfZ,IAGEF,GAAAA,EAA4B,CAGzB,IAFCiB,IAAAA,EAAc3B,EAAMe,KAAK,GAAGG,MAAMF,OAAS,EAExCY,EAAI,EAAGA,EAAI5B,EAAMe,KAAKC,OAAQY,IAAK,CAC9B5B,EAAMe,KAAKa,GAEnBC,WAAWF,GAEjBf,IAGED,GAAAA,EAA4B,CACzB,IAAA,IAAIiB,EAAI,EAAGA,EAAI5B,EAAMe,KAAKC,OAAQY,IAAK,CAC9B5B,EAAMe,KAAKa,GAEnBE,aAENlB","file":"main.6425b11f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst button = document.querySelectorAll('button');\nconst tBody = document.querySelector('tbody');\n\nbutton.forEach((item) => {\n  // eslint-disable-next-line no-shadow\n  item.addEventListener('click', function (event) {\n    const catchTheButtonRemove = event.target.closest('.remove-row');\n    const catchTheButtonAppend = event.target.closest('.append-row');\n    const catchTheButtonRemoveColumn = event.target.closest('.remove-column');\n    const catchTheButtonAppendColumn = event.target.closest('.append-column');\n\n    function updateButtonState() {\n      button.forEach((btn) => {\n        const rowCount = tBody.rows.length;\n        const columnCount = tBody.rows[0] ? tBody.rows[0].cells.length : 0;\n\n        if (btn.classList.contains('remove-row')) {\n          btn.disabled = rowCount <= 2;\n        }\n\n        if (btn.classList.contains('append-row')) {\n          btn.disabled = rowCount >= 10;\n        }\n\n        if (btn.classList.contains('remove-column')) {\n          btn.disabled = columnCount <= 2;\n        }\n\n        if (btn.classList.contains('append-column')) {\n          btn.disabled = columnCount >= 10;\n        }\n      });\n    }\n\n    if (catchTheButtonRemove) {\n      if (tBody.rows.length > 0) {\n        tBody.deleteRow(tBody.rows.length - 1);\n      }\n      updateButtonState();\n    }\n\n    if (catchTheButtonAppend) {\n      const lastElement = tBody.rows[tBody.rows.length - 1];\n\n      if (lastElement) {\n        const copiedRow = lastElement.cloneNode(true);\n\n        tBody.append(copiedRow);\n      }\n      updateButtonState();\n    }\n\n    if (catchTheButtonRemoveColumn) {\n      const columnIndex = tBody.rows[0].cells.length - 1;\n\n      for (let i = 0; i < tBody.rows.length; i++) {\n        const row = tBody.rows[i];\n\n        row.deleteCell(columnIndex);\n      }\n      updateButtonState();\n    }\n\n    if (catchTheButtonAppendColumn) {\n      for (let i = 0; i < tBody.rows.length; i++) {\n        const row = tBody.rows[i];\n\n        row.insertCell();\n      }\n      updateButtonState();\n    }\n  });\n});\n"]}